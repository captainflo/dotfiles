[core]
  autocrlf = input
  excludesfile = /Users/olivier/.gitignore
  editor = vim
[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
[init]
  templatedir = ~/.git_template
[push]
  default = current
[alias]
  chunkyadd = add --patch           # stage commits chunk by chunk
  ap = add --patch           # stage commits chunk by chunk
  aa = add --all --intent-to-add # add untracked files to the index without content
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  # via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  snapshots = !git stash list --grep snapshot
  assume   = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
  #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  recent-branches = !git for-each-ref --count=5 --sort=-committerdate refs/heads/ --format='%(refname:short)'
  ca = commit --amend
  ci = commit -v
  co = checkout
  pf = push --force-with-lease
  st = status
  up = !git fetch origin && git rebase origin/master
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[merge]
  ff = only
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
[rebase]
  autosquash = true
[include]
  path = ~/.gitconfig.local
